import numpy as np

def rotation_matrix_checker(matrix, tolerance=1e-5):
    # Check if the input is a 3x3 matrix
    if not isinstance(matrix, np.ndarray) or matrix.shape != (3, 3):
        return False
    
    # Check if the matrix is orthogonal (transpose equals inverse)
    orthogonal_check = np.allclose(np.dot(matrix.T, matrix), np.eye(3), atol=tolerance)
    
    # Check if the determinant is 1 (to ensure proper orientation)
    determinant = np.linalg.det(matrix)
    proper_orientation_check = np.isclose(determinant, 1.0, atol=tolerance)
    
    # The matrix is a rotation matrix if it is orthogonal and has determinant 1
    return orthogonal_check and proper_orientation_check

# Example 
matrix1 = np.array([[0.999999, -0.000001, 0],
                   [0.000001, 0.999999, 0],
                   [0, 0, 1]])  

print(rotation_matrix_checker(matrix1)) 
